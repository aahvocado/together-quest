// create border-width for 0, 1, 2, 3, 4, 5
.generate-all-border-width(5);

// mixin for create all instances of margin
.generate-all-border-width(@n, @i: 0) when (@i =< @n) {
  .generate-border-width-top(@i);
  .generate-border-width-bottom(@i);
  .generate-border-width-left(@i);
  .generate-border-width-right(@i);

  // recursive loop
  .generate-all-border-width(@n, (@i + 1));
};

/*
  example:
  .generate-border-top(2) will output .bor-t-2 { border-top-width: 2px; }
*/
.generate-border-width-top(@num) {
  .bor-t-@{num} {
    border-top-width: ~"@{num}px";
    border-style: solid;
  }
}
.generate-border-width-bottom(@num) {
  .bor-b-@{num} {
    border-bottom-width: ~"@{num}px";
    border-style: solid;
  }
}
.generate-border-width-left(@num) {
  .bor-l-@{num} {
    border-left-width: ~"@{num}px";
    border-style: solid;
  }
}
.generate-border-width-right(@num) {
  .bor-r-@{num} {
    border-right-width: ~"@{num}px";
    border-style: solid;
  }
}
